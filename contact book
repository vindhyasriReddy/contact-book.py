import json

class Contact:
    def _init_(self, name, phone, email):
        self.name = name
        self.phone = phone
        self.email = email

    def to_dict(self):
        return {
            'name': self.name,
            'phone': self.phone,
            'email': self.email
        }

class ContactBook:
    def _init_(self, filename='contacts.json'):
        self.filename = filename
        self.contacts = self.load_contacts()

    def load_contacts(self):
        try:
            with open(self.filename, 'r') as file:
                return [Contact(**data) for data in json.load(file)]
        except FileNotFoundError:
            return []

    def save_contacts(self):
        with open(self.filename, 'w') as file:
            json.dump([contact.to_dict() for contact in self.contacts], file)

    def add_contact(self, contact):
        self.contacts.append(contact)
        self.save_contacts()

    def view_contacts(self):
        if not self.contacts:
            print("No contacts found.")
            return
        print("\nContact List:")
        for idx, contact in enumerate(self.contacts, start=1):
            print(f"{idx}. {contact.name} | {contact.phone} | {contact.email}")

    def search_contact(self, query):
        results = [contact for contact in self.contacts if query.lower() in contact.name.lower()]
        if results:
            print("\nSearch Results:")
            for contact in results:
                print(f"{contact.name} | {contact.phone} | {contact.email}")
        else:
            print("No matching contacts found.")

def main():
    contact_book = ContactBook()

    while True:
        print("\n--- Contact Book ---")
        print("1. Add Contact")
        print("2. View Contacts")
        print("3. Search Contact")
        print("4. Exit")
        
        choice = input("Choose an option: ")

        if choice == '1':
            name = input("Enter name: ")
            phone = input("Enter phone: ")
            email = input("Enter email: ")
            contact = Contact(name, phone, email)
            contact_book.add_contact(contact)
            print("Contact added successfully!")

        elif choice == '2':
            contact_book.view_contacts()

        elif choice == '3':
            query = input("Enter name to search: ")
            contact_book.search_contact(query)

        elif choice == '4':
            print("Exiting the contact book. Goodbye!")
            break

        else:
            print("Invalid choice! Please try again.")

if _name_ == "_main_":
    main()
